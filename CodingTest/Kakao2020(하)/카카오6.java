
public class 카카오6 {
	public static void main(String[] args) {
		// 카드 16장이 4 x 4
		// 앞면에는 카카오 캐릭터. 각기 2장씩 ㅇㅇ
		// 유저가 카드를 2장 선택하여 앞면으로 뒤집었을 때 같은 그림이 그려진 카드면 해당 카드는 화면에서 사라지며,
		// 같은 그림이 아니면 원래 상태로 뒷면이 보이도록 다시 원위치.
		// 이 방법으로 모든 카드를 화면에서 사라지게 하면 게임 종료

		// 카드 선택하는 방법
		// 커서를 이용해서 선택
		// 4 x 4 화면에서 유저가 선택한 현재 위치를 표시하는 상자
		// 키 조작은 누른키 방향에 있는 가장 가까운 카드로 이동
		// 만약 해당 방향에 카드가 하나도 없다면 그 방향의 가장 마지막 칸으로 이동
		// 이동할 수 없다면 움직이지 x

		// 카드 뒤집으려면 enter
		// Enter를 입력해서 카드를 뒤집었을때
		// 앞면이 보이는 카드가 1장 뿐이라면 그림 맞추기 x, 두번째 카드를 뒤집을 때까지 앞면 유지
		// 앞면이 보이는 카드가 2장인 경우, 두개의 카드에 그려진 그림이 같으면 해당 카드들 삭제/ 다르면 다시 뒤집

		// 몇 장 제거된 상태에서 카드 앞면의 그림을 알고 있다면, 남은 카드를 모두 제거하는데 필요한 키 조작 횟수의 최솟값 구하자
		// 방향키와 Enter 누르는 동작 각각 1 함께 누르는 동작도 1
		int[][] board = { { 1, 0, 0, 3 }, { 2, 0, 0, 0 }, { 0, 0, 0, 2 }, { 3, 0, 1, 0 } };
		int r = 1;
		int c = 0;
		int result = solution(board, r, c);
		System.out.println(result);

	}

	static int[] dx = {0,1,0,-1};
	static int[] dy = {1,0,-1,0};
	static public int solution(int[][] board, int r, int c) {
		int answer = 0;

		return answer;
	}
	
	
}
